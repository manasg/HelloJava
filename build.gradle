apply plugin: 'java'
apply plugin: 'application'

sourceSets {
    main {
        java { srcDir 'src' }
    }
}

def prop_file = 'some.properties'
task runHello( dependsOn: [compileJava], type: JavaExec ) {
    args( [file(prop_file).canonicalPath] )
    main = 'just.testing.Hello'
    classpath sourceSets.main.runtimeClasspath
}

/*
def prop_file_custom = "$prop_file_custom"
task runHello2( dependsOn: [compileJava], type: JavaExec ) {
    args( [file(prop_file_custom).canonicalPath] )
    main = 'just.testing.Hello'
    classpath sourceSets.main.runtimeClasspath
}
*/

//Fake dependencies
repositories {
    mavenCentral()
}

dependencies {
    compile group: 'commons-collections', name: 'commons-collections', version: '3.2'
}
//

mainClassName = "just.testing.Hello"

version = '1.0.0'
jar {
    manifest {
        attributes 'Implementation-Title': 'HelloJava', \
        			'Implementation-Version': version, \
        			'Main-Class': mainClassName
    }
}